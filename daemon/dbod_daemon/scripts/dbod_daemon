#!/usr/bin/perl -w

package dbod_daemon;

use strict;
use Getopt::Long;
use Proc::Daemon;

# Initializes Logging Settings

use DBOD::Config qw($config);
use DBOD;

our ($logger, $workdir, $pidfile); 

INIT {
    $logger = Log::Log4perl::get_logger('DBOD.Daemon');
    $logger->info('Logger created');
    $workdir = $config->{'DAEMON_WORKDIR'};
    $pidfile = "$workdir/$config->{'DAEMON_PIDFILE'}";
}

sub usage() {
    print "USAGE:\n\tcommand --start\n\tcommand --stop\n";
    exit -1;
}

sub Main {

    my ($start, $stop);
    usage() if (@ARGV != 1 or ! GetOptions('start' => \$start, 'stop' => \$stop));

    my $daemon = Proc::Daemon->new(work_dir => $workdir,
                                    child_STDOUT => ">>$config->{'DAEMON_STDOUT'}",
                                    child_STDERR => ">>$config->{'DAEMON_STDERR'}",
                                    pid_file => $pidfile);

    $logger->info("Workdir: $workdir, pidfile: $pidfile");

    if (-e $pidfile){
        my $pid = `cat $pidfile`;
        if ($stop){
            $logger->info( "Stopping daemon process PID: $pid" );
            print "Stopping daemon process PID: $pid\n" ;
            my $stopped = $daemon->Kill_Daemon( $pid );
            $logger->info( "Number of processes killed: $stopped ");
            unlink($pidfile);
            exit 0;
        }
        elsif ($start){
            chomp $pid;
            print "A daemon is running with PID: $pid\n";
            exit -1;
        }
    }
    else{
        if ($start){
            $logger->info('Starting DBOD daemon');
            my $dispatcher = $daemon->Init();
            unless ($dispatcher){
                # Daemon process
                eval{
                    DBOD::jobDispatcher();
                    1;
                } or do {
                    $logger->error('The daemon process died!');
                    unlink($pidfile);
                    exit -1;
                }
            }
            $logger->info("Job dispatcher PID: $dispatcher");
            my $status = $daemon->Status($dispatcher);
            print "PID: $dispatcher\n";
            exit 0;
        }
        elsif($stop){
            print("No processes running.\n");
            exit -1;
        }
    }
}

&Main();
1;

END { }

=head1 Name

dbod_daemon - Database on Demand daemon

=cut

=head1 Use

=over

=item *

/etc/init.d/dbod_daemon (start/stop/restart/status)

=item *

service dbod_daemon (start/stop/restart/status)

=back

=head1 Configuration files

Configuration and additional support files can be found at: <PATH_TO_PERL_SHARE>/DBOD/

=over

=item *

dbod_daemon.conf : General configuration file. YAML format

=begin

        ---
        # Behaviour parameters
        JOB_MAX_DURATION: 6 # HOURS
        JOB_MAX_PENDING: 30 # SECONDS

        # Logging configuration
        LOGGER_CONFIG: 'dbod_daemon_logger.conf'
        DAEMON_STDOUT: 'dbod_daemon_proc.log'
        DAEMON_STDERR: 'dbod_daemon_proc.log'
        DAEMON_PIDFILE: 'dbod_daemon.pid'
        DAEMON_WORKDIR: '/var/run/dbod_daemon'

        # Database parameters
        DB_TAG: 'password_db_dod_dbondemand_test'
        DB_USER: 'dbondemand_test'
        DB_DSN: 'dbi:Oracle:devdb11'
        DB_DATE_FORMAT: 'dd-mm-yyyy HH24:MI:SS'
        DB_PASSWORD: 'XXXXXXXXXX'

        # LDAP related parameters
        LDAP_SERVER: 'syscontrol-ldap.cern.ch'
        LDAP_USER: 'dbodemon'
        LDAP_PORT: 636
        LDAP_PROTOCOL: 'ldaps'
        LDAP_USERDN: 'cn=dbodemon,ou=users,dc=cern,dc=ch'
        LDAP_PASSWORD: 'XXXXXXXXX'
        LDAP_BASE: 'ou=syscontrol,dc=cern,dc=ch'
        LDAP_BASE_ENTITIES: 'SC-CATEGORY=entities,ou=syscontrol,dc=cern,dc=ch'

        # Misc
        PATH: '/ORA/dbs01/syscontrol/etc'
        PASSWORD_FILE: '/ORA/dbs01/syscontrol/projects/systools/etc/passwd'
        SC_LOCK_FILE: '/var/run/dbod_daemon/dbod_state_checker.lock'
        ---


=end

=item *

dbod_daemon_logger.conf : L<Log::Log4perl> configuration file format

=head1 Comments

Other related executables deployed as part of the DBOD daemon package installation are:

=item *

L<dbod_state_checker>

=item *

L<dbod_daemon_monitor>

=head1 Author

Ignacio Coterillo <ignacio.coterillo.cern.ch> 

IT-DB-DBB


=cut
