
package ch.cern.dod.ws;

import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "DODWebService", targetNamespace = "https://syscontrol.cern.ch/Dod/", wsdlLocation = "classpath:/WEB-INF/wsdl/dodwebservices.wsdl")
public class DODWebService
    extends Service
{

    private final static URL DODWEBSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ch.cern.dod.ws.DODWebService.class.getName());

    static {
        DODWEBSERVICE_WSDL_LOCATION = ch.cern.dod.ws.DODWebService.class.getResource("/WEB-INF/wsdl/dodwebservices.wsdl");
        }

    public DODWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DODWebService() {
        super(DODWEBSERVICE_WSDL_LOCATION, new QName("https://syscontrol.cern.ch/Dod/", "DODWebService"));
    }

    /**
     * 
     * @return
     *     returns DODWebServicePortType
     */
    @WebEndpoint(name = "DODWebServicePort")
    public DODWebServicePortType getDODWebServicePort() {
        return super.getPort(new QName("https://syscontrol.cern.ch/Dod/", "DODWebServicePort"), DODWebServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DODWebServicePortType
     */
    @WebEndpoint(name = "DODWebServicePort")
    public DODWebServicePortType getDODWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("https://syscontrol.cern.ch/Dod/", "DODWebServicePort"), DODWebServicePortType.class, features);
    }

}
